From 502201323f6768b4310f986696434f8581999f39 Mon Sep 17 00:00:00 2001
From: MrTopia <redkarmakar@gmail.com>
Date: Wed, 14 Aug 2024 14:18:23 +0530
Subject: [PATCH] x

---
 packages/SystemUI/Android.bp                  |  2 +
 .../systemui/biometrics/UdfpsController.java  | 56 +++++++++++++++++++
 services/core/Android.bp                      |  2 +
 3 files changed, 60 insertions(+)

diff --git a/packages/SystemUI/Android.bp b/packages/SystemUI/Android.bp
index 8f2e19766953..acedd0af0d42 100644
--- a/packages/SystemUI/Android.bp
+++ b/packages/SystemUI/Android.bp
@@ -526,6 +526,8 @@ android_library {
         "device_policy_aconfig_flags_lib",
         "framework-derpfest.static",
         "bcsmartspace-google",
+        "vendor.xiaomi.hardware.fingerprintextension-V1-java",
+        "vendor.xiaomi.hw.touchfeature-V1-java"
     ],
     libs: [
         "keepanno-annotations",
diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
index dc40ae5bb970..96257ce7edc8 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
@@ -128,6 +128,9 @@ import java.util.concurrent.Executor;
 
 import javax.inject.Inject;
 
+import vendor.xiaomi.hardware.fingerprintextension.IXiaomiFingerprint;
+import vendor.xiaomi.hw.touchfeature.ITouchFeature;
+
 /**
  * Shows and hides the under-display fingerprint sensor (UDFPS) overlay, handles UDFPS touch events,
  * and toggles the UDFPS display mode.
@@ -192,6 +195,9 @@ public class UdfpsController implements DozeReceiver, Dumpable {
     private final boolean mIgnoreRefreshRate;
     private final KeyguardTransitionInteractor mKeyguardTransitionInteractor;
 
+    private static ITouchFeature xaiomiTouchFeatureAidl = null;
+    private static IXiaomiFingerprint xaiomiFingerprintExtensionAidl = null;
+
     // Currently the UdfpsController supports a single UDFPS sensor. If devices have multiple
     // sensors, this, in addition to a lot of the code here, will be updated.
     @VisibleForTesting @NonNull FingerprintSensorPropertiesInternal mSensorProps;
@@ -282,6 +288,50 @@ public class UdfpsController implements DozeReceiver, Dumpable {
                 }
             };
 
+    private static void xaiomiTouchFeature(int arg) {
+        try {
+            if (xaiomiTouchFeatureAidl == null) {
+                var name = "default";
+                var fqName = vendor.xiaomi.hw.touchfeature.ITouchFeature.DESCRIPTOR + "/" + name;
+                var b = android.os.Binder.allowBlocking(android.os.ServiceManager.waitForDeclaredService(fqName));
+                xaiomiTouchFeatureAidl = vendor.xiaomi.hw.touchfeature.ITouchFeature.Stub.asInterface(b);
+
+                // Link to death
+                b.linkToDeath(() -> {
+                    android.util.Log.w("FP-HAX", "TouchFeature binder died. Reconnecting...");
+                    xaiomiTouchFeatureAidl = null;
+                }, 0);
+
+                android.util.Log.d("FP-HAX", "Binded TouchFeature");
+            }
+            xaiomiTouchFeatureAidl.setTouchMode(0, 10, arg);
+        } catch(Throwable t) {
+            android.util.Log.e("FP-HAX", "TouchFeature", t);
+        }
+    }
+
+    private static void xiaomiFingerprintExtension(int arg) {
+        try {
+            if (xaiomiFingerprintExtensionAidl == null) {
+                var name = "default";
+                var fqName = vendor.xiaomi.hardware.fingerprintextension.IXiaomiFingerprint.DESCRIPTOR + "/" + name;
+                var b = android.os.Binder.allowBlocking(android.os.ServiceManager.waitForDeclaredService(fqName));
+                xaiomiFingerprintExtensionAidl = vendor.xiaomi.hardware.fingerprintextension.IXiaomiFingerprint.Stub.asInterface(b);
+
+                // Link to death
+                b.linkToDeath(() -> {
+                    android.util.Log.w("FP-HAX", "FingerprintExtension binder died. Reconnecting...");
+                    xaiomiFingerprintExtensionAidl = null;
+                }, 0);
+
+                android.util.Log.d("FP-HAX", "Binded FingerprintExtension");
+            }
+            xaiomiFingerprintExtensionAidl.extCmd(4, arg);
+        } catch(Throwable t) {
+            android.util.Log.e("FP-HAX", "FingerprintExtension", t);
+        }
+    }
+
     @Override
     public void dump(@NonNull PrintWriter pw, @NonNull String[] args) {
         final int touchConfigId = mContext.getResources().getInteger(
@@ -1160,6 +1210,9 @@ public class UdfpsController implements DozeReceiver, Dumpable {
             }
         }
 
+        xaiomiTouchFeature(1);
+        xiaomiFingerprintExtension(1);
+
         for (Callback cb : mCallbacks) {
             cb.onFingerDown();
         }
@@ -1212,6 +1265,9 @@ public class UdfpsController implements DozeReceiver, Dumpable {
         mOnFingerDown = false;
         unconfigureDisplay(view);
         cancelAodSendFingerUpAction();
+        
+        xaiomiTouchFeature(0);
+        xiaomiFingerprintExtension(0);
     }
 
     /**
diff --git a/services/core/Android.bp b/services/core/Android.bp
index 7df2a75794ad..4fbf7065efe5 100644
--- a/services/core/Android.bp
+++ b/services/core/Android.bp
@@ -232,6 +232,8 @@ java_library_static {
         "framework-derpfest.static",
         "vendor.aac.hardware.richtap.vibrator",
         "vendor.aospa.biometrics.face",
+        "vendor.xiaomi.hardware.fingerprintextension-V1-java",
+        "vendor.xiaomi.hw.touchfeature-V1-java",
     ],
     javac_shard_size: 50,
     javacflags: [
-- 
2.34.1

